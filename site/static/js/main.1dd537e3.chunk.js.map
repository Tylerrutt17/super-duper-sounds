{"version":3,"sources":["components/Nav.js","config.js","About.js","components/AudioTrack.js","Tracks.js","components/AudioUpload.js","UploadSound.js","components/login&register/RegisterComponent.js","components/login&register/LoginComponent.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Nav","history","useHistory","postRoute","e","targetRoute","target","id","data","token","Cookie","get","axios","post","then","response","alert","console","log","push","catch","error","className","onClick","remove","About","useEffect","AudioTrack","trackUrl","trackTitle","src","isDark","Tracks","useState","tracks","settracks","fetchItems","sData","JSON","stringify","map","track","key","location","title","AudioUpload","file","setFile","isEnabled","setisEnabled","soundTitle","setSoundTitle","keyword","setKeyword","postData","name","htmlFor","onChange","value","type","audio","files","imageFile","disabled","UploadSound","RegisterComponent","email","setEmail","password","setPassword","setName","placeholder","LoginComponent","required","idToken","code","set","withRouter","isLogin","setLogin","App","path","exact","component","Login","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1dd537e3.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Cookie from \"js-cookie\"\nimport { useHistory } from \"react-router-dom\";\nimport { url } from '../config'\n\nfunction Nav() {\n\n    const history = useHistory();\n\n    const logout = () => {\n        Cookie.remove('token')\n        history.push(\"/login\");\n        alert('logged out')\n    }\n\n    // Checks token serverside then sends back success or failure\n    function postRoute(e) {\n        const targetRoute = e.target.id\n\n        const token =  Cookie.get(\"token\") ? Cookie.get(\"token\") : null;\n        let data = {token: token}\n           axios\n            .post(`${url}/checkAuth`, data) // data to send\n            .then(response => response)\n            .then(data=> {\n                if (data.data != \"failure\") {\n                    if (targetRoute == \"login\") {alert(\"You Are Already Logged In\")\n                    } else {\n                        console.log('Token passed sucessfully', data.data)\n                        history.push(`/${targetRoute}`);\n                    }\n                    \n                } else {\n                    console.log(\"No token exists\")\n                    history.push(\"/login\");\n                    alert('Please Login to Access Site')\n                }\n            })\n            .catch(error => {\n                console.log(error)\n        })\n    }\n\n    return (\n        <nav>\n            <h1>SUPER DUPER SOUNDS</h1>\n            <ul className='nav-links'>\n                <li><button className={'nav-link'} id={'about'} onClick={postRoute}>About</button></li>\n                <li><button className={'nav-link'} id={'tracks'} onClick={postRoute}>Tracks</button></li>\n                <li><button className={'nav-link'} id={'uploadsound'} onClick={postRoute}>Upload Sounds</button></li>\n                <li><button className={'nav-link'} id={'login'} onClick={postRoute}>Login</button></li>\n                <li><button className={'nav-link'} onClick={logout}>Logout</button></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Nav","export const url = \"\"","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Cookie from \"js-cookie\"\n\nfunction About() {\n \n\n    useEffect(() => {\n        // const token =  Cookie.get(\"token\") ? Cookie.get(\"token\") : null;\n        // console.log(token)\n    },[]);\n\n    return (\n        <div className=\"App\">\n            <h2 className={'page-title'}>ABOUT PAGE</h2>\n            <h2>ABOUT SUPER DOUPER SOUNDS</h2>\n            <p>Welcome To Super Douper Sounds! This website was created to ensure a good place for people to find sounds. Simply create an account and access our library. You can also upload your own sounds and tunes!</p>\n        </div>\n    )\n}\n\nexport default About","import React, {useState, useEffect} from 'react';\nimport '../App.css';\nimport '../css/AudioTrack.css'\nimport Player from \"react-howler-player\";\n\nfunction AudioTrack({trackUrl, trackTitle}) {\n\n    return (\n        <div className={'audio-track-container'}>\n            <div>\n              \n              <h2 className={'track-title'}>{trackTitle}</h2>\n              <br></br>\n              <Player src={[trackUrl]} isDark={true}  \n                  //onTimeUpdate={timeUpdate}\n              />\n            </div>\n        </div>\n    )\n}\n\nexport default AudioTrack","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport AudioTrack from './components/AudioTrack'\nimport Player from \"react-howler-player\";\nimport axios from 'axios'\n\nfunction Tracks() {\n\n    const [tracks, settracks] = useState([])\n\n    useEffect(() => {\n        fetchItems();\n    }, []);\n\n    const fetchItems = () => {\n        settracks() // make sure its empty upon loading\n        // Fetch Tracks Here\n        axios\n        .get('http://localhost:8000/gettracks')\n        .then(response => response)\n        .then(data=> {\n            let sData = (JSON.stringify({data}))\n            // for (var key in sData) {\n            //     if (sData.hasOwnProperty(key)) {\n            //         console.log(key + \" -> \" + sData[key]);\n            //     }\n            // }\n            console.log(sData)\n            //settracks(data)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <div className=\"App\">\n            <h2 className={'page-title'}>TRACKS</h2>\n            <div>\n            <div className={'side-margin'}>\n            { !tracks ? 'Loading' :\n                tracks.map(track=>(\n                    <div key={track.location}>\n                        {<AudioTrack\n                            trackUrl={track.location}\n                            trackTitle={track.title}\n                        />}\n                    </div>\n                    )\n                )}\n            </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Tracks","import React, { useState } from 'react'\nimport './AudioUpload.css';\nimport uuid from \"../uuid\"\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\n\nfunction AudioUpload() {\n\n    const [file, setFile] = useState()\n    const [link, setLink] = useState('')\n    const [isEnabled, setisEnabled] = useState(true)\n\n    // Input values\n    const [soundTitle, setSoundTitle] = useState('')\n    const [keyword, setKeyword] = useState('')\n\n    const history = useHistory()\n\n    const handleFirebaseUpload = (e) => {\n    \n        // if(isFileMp3(file)===true) {\n        //     setisEnabled(false)\n        //     let id = uuid()\n        //     let bucketName = 'tracks'\n        //     let storageRef = firebase.storage().ref(`${bucketName}/${id}`)\n        //     let uploadTask = storageRef.put(file)\n        //     uploadTask.on('state_changed', \n        //     (snapShot) => {\n        //         //takes a snap shot of the process as it is happening\n        //         console.log(snapShot)\n        //     }, (err) => {\n        //         //catches the errors\n        //         console.log(err)\n        //     }, () => {\n        //         // gets the functions from storage refences the image storage in firebase by the children\n        //         // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        //         firebase.storage().ref('tracks').child(id).getDownloadURL()\n        //         .then(fireBaseUrl => {\n        //             uploadRefLoc(fireBaseUrl, id)\n        //             console.log(\"uploaded audio file to storage\")\n        //         })\n        //     })\n        // } else {\n        //     alert('Not A Mp3 File')\n        // }\n    }\n\n    // const uploadRefLoc = (aLoc, id)=> {\n    //     let db = firebase.database()\n    //     let ref = db.ref('tracks')\n    //     ref.child(id).set({\"location\": aLoc, \"title\": soundTitle, \"keyword\": keyword})\n    //     .then(()=> {\n    //         console.log(\"added reference to db\")\n    //         if (window.confirm('Successfully Uploaded Sound. Add Another?')) {\n    //             window.location.reload(false)\n    //         }\n\n    //     })\n    //     .catch(()=> {\n    //         // err uploading\n    //     })\n    // }\n\n    const checkInputs = () => {\n        // checks to make sure there are valid inputs and not empty\n        console.log(\"keyword\", keyword)\n        if (keyword && soundTitle && file) {\n            postData()\n        } else {\n            alert('Please Fill Out All Fields')\n        }\n    }\n\n    const handleAudioasFile = (e) => {\n        const audio = e.target.files[0]\n        setFile(imageFile => (audio))\n    }\n\n    const postData = () => {\n        setisEnabled(false)\n            // console.log(email, password, name)\n        const token =  Cookie.get(\"token\") ? Cookie.get(\"token\") : null;\n        let data = {file: file, name: soundTitle, keyword: keyword, token: token}\n        axios\n            .post('http://localhost:8000/uploadFile', data) // data to send\n            .then(response => response)\n            .then(data=> {\n                history.push(\"/uploadsound\")\n                alert(`Successfully Uploaded File`)\n            })\n            .catch(error => {\n                console.log(\"ERRRRRR\", error)\n                alert(`Error ${error}`)\n            })\n    }\n\n\n    // function isFileMp3(file) {\n    //     return file && file['type'].split('.')[0] === 'mp3';\n    // }\n\n    // function isFileMp3(file) {\n\n    //     var fileExtension = file.name.slice(file.name.length - 4)\n    //     console.log(\"file\", fileExtension)\n    //     if (fileExtension === \".mp3\" || \".wav\") {\n    //         console.log(\"True\")\n    //         return true\n    //     } else { console.log(\"false\"); return false }\n    // }\n\n    return (\n        <div>\n            <div className={'input-div centered'}>\n            \n                <label htmlFor={'soundname'}>Sound Name</label><br></br>\n                <input className={'input'} id={'soundname'} onChange={(e)=>setSoundTitle(e.target.value)} ></input><br></br>\n                <label htmlFor={'keyword'}>Keyword</label><br></br>\n                <input className={'input'} id={'keyword'} onChange={(e)=>setKeyword(e.target.value)}></input><br></br>\n                <h5>Must Be Valid .mp3 File To Run Correctly</h5>\n                <form><br></br>\n                    <input className={'upload-file'} type=\"file\" onChange={handleAudioasFile} />\n                    \n                </form><br></br>\n                <button className={'upload-btn'} onClick={checkInputs} disabled={!isEnabled}>{isEnabled ? \"Upload\" : \"Uploading!\"}</button>\n                \n            </div>\n        </div>\n    )\n\n} \n\nexport default AudioUpload","import React, { Component } from 'react';\nimport './App.css';\nimport AudioUpload from \"./components/AudioUpload\"\n\nfunction UploadSound() {\n\n    const uploadPressed = () => {\n        console.log(\"upload!\")\n    }\n    \n    return (\n        <div className=\"App\">\n            <h2 className={'page-title'}>UPLOAD A SOUND</h2>\n            <AudioUpload></AudioUpload>\n        </div>\n    )\n}\n\nexport default UploadSound","import React, {useState, useEffect} from 'react';\nimport '../../css/AudioTrack.css'\nimport Player from \"react-howler-player\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\nimport { url } from '../../config'\n\nfunction RegisterComponent() {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [name, setName] = useState('')\n    const history = useHistory();\n\n    const attemptRegister=()=>{\n        \n        if (email && password && name) { // basic check to see that they are not empty\n           // console.log(email, password, name)\n           let data = {email: email, password: password, name: name}\n           axios\n            .post(`${url}/createUser`, data) // data to send\n            .then(response => response)\n            .then(data=> {\n                console.log(\"Successfully created new user!\", data)\n                history.push(\"/about\")\n                alert(`Created New User: ${name}`)\n            })\n            .catch(error => {\n                console.log(\"ERRRRRR\", error)\n                alert(`Error ${error}`)\n            })\n        }\n    }\n\n    return (\n        <div>\n            <label className={'input-name-lbl'}>NAME</label><br></br>\n            <input\n                className={'input'}\n                type={'name'}\n                id={'name'}\n                placeholder={'Enter Name...'}\n                onChange={(e)=>setName(e.target.value)}\n            /><br></br>\n            <label className={'input-name-lbl'}>EMAIL</label><br></br>\n            <input\n                className={'input'}\n                type={'email'}\n                id={'email'}\n                placeholder={'Enter Email...'}\n                onChange={(e)=>setEmail(e.target.value)}\n            /><br></br>\n            <label className={'input-name-lbl'}>PASSWORD</label><br></br>\n            <input \n                className={'input'}\n                type={'password'}\n                id={'password'}\n                placeholder={'Enter Password...'}\n                onChange={(e)=>setPassword(e.target.value)}\n            />\n            <br></br>\n            <button className={'login-btn'} onClick={attemptRegister}>Register</button>\n        </div>\n    )\n}\n\nexport default RegisterComponent","import React, {useState, useEffect} from 'react';\nimport '../../App.css';\nimport '../../css/Login.css'\nimport Fetchy from \"../../fetch/useFetch\"\nimport axios from 'axios'\nimport Cookie from \"js-cookie\"\nimport { useHistory } from \"react-router-dom\";\nimport { url } from '../../config'\n\nfunction LoginComponent() {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const history = useHistory();\n\n    const attemptLogin=()=>{\n        let data = {email: email, password: password}\n        axios\n        .post(`${url}/signIn`, data)\n        .then(response => response)\n        .then(data=> {\n            console.log(data.data)\n            // checking that the data code did not represent a failed attempt\n            if (data.data.idToken && data.code != \"auth/wrong-password\") {\n                // successfully logged in   \n                console.log(\"Set Token\", data.data.idToken)\n                Cookie.set(\"token\", data.data.idToken);\n                history.push(\"/about\")\n            } else {\n                alert('Wrong Passcode or Email...')\n            }\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <div>\n            <label className={'input-name-lbl'}>EMAIL</label><br></br>\n            <input\n            required\n                className={'input'}\n                type={'email'}\n                id={'email'}\n                placeholder={'Enter Email...'}\n                onChange={(e)=>setEmail(e.target.value)}\n            /><br></br>\n            <label className={'input-name-lbl'}>PASSWORD</label><br></br>\n            <input \n                required\n                className={'input'}\n                type={'password'}\n                id={'password'}\n                placeholder={'Enter Password...'}\n                onChange={(e)=>setPassword(e.target.value)}\n            />\n            <br></br>\n            <button className={'login-btn'} onClick={attemptLogin} >Login</button>\n        </div>\n    )\n}\n\n\n\nexport default LoginComponent","import React, { useState } from 'react';\nimport './css/Login.css'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport RegisterComponent from './components/login&register/RegisterComponent'\nimport LoginComponent from './components/login&register/LoginComponent'\n\nfunction Login() {\n\n    const [isLogin, setLogin] = useState(true) // default logging in screen.\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const invertRegister=()=>{\n        let inverted = !isLogin\n        setLogin(inverted)\n    }\n\n    return (\n        <div className={'login-container centered'}>\n            <h1>{isLogin ? 'LOGIN' : 'REGISTER'}</h1>\n            {isLogin ? <LoginComponent/> : <RegisterComponent/>}\n            <button onClick={invertRegister} className={'toggle-login-view'}>{isLogin ? 'Go To Register' : 'Go To Login'}</button>\n        </div>\n    )\n}\n\nexport default withRouter(Login)","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from \"./components/Nav\"\nimport About from './About'\nimport Tracks from './Tracks'\nimport UploadSound from './UploadSound'\nimport Login from './Login'\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nexport default function App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={About}/>\n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/tracks\" component={Tracks}/>\n          <Route path=\"/uploadsound\" component={UploadSound}/>\n          <Route path=\"/login\" component={Login}/>\n        </Switch>\n      </div>\n    </Router>\n  )\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}